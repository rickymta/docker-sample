name: CI Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool install -g dotnet-sonarscanner --version 6.2.0

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        shell: pwsh
        run: |
          dotnet-sonarscanner begin /k:"docker-sample" /d:sonar.login="sqp_645ef4e274f0aae19dcb2d958e3c23c686989345" /d:sonar.host.url="http://192.168.1.12:9000"
          dotnet build
          dotnet-sonarscanner end /d:sonar.login="sqp_645ef4e274f0aae19dcb2d958e3c23c686989345"

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x' # Adjust to the .NET version you need

      - name: Install .NET tools
        run: |
          dotnet tool install --global dotnet-format --version 5.1.250801
          dotnet tool install --global dotnet-stryker --version 4.0.6

      - name: Add .NET tools to PATH
        shell: bash
        run: echo "${{ github.environment }}" >> $GITHUB_ENV

      - name: Run PowerShell Script
        run: |
          pwsh -file ./build.ps1 -Task All
        shell: pwsh
